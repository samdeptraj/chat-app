{"version":3,"file":"profanity-check.cjs.development.js","sources":["../src/data/dictionary.ts","../src/Filter.ts"],"sourcesContent":["import Arabic from './arabic.json';\nimport Chinese from './chinese.json';\nimport Czech from './czech.json';\nimport Danish from './danish.json';\nimport Esperanto from './esperanto.json';\nimport English from './english.json';\nimport Finnish from './finnish.json';\nimport German from './german.json';\nimport Hindi from './hindi.json';\nimport Hungarian from './hungarian.json';\nimport Korean from './korean.json';\nimport Norwegian from './Norwegian.json';\nimport Persian from './persian.json';\nimport Polish from './polish.json';\nimport Portuguese from './portuguese.json';\nimport Russian from './russian.json';\nimport French from './french.json';\nimport Italian from './italian.json';\nimport Japanese from './japanese.json';\nimport Turkish from './turkish.json';\nimport Swedish from './swedish.json';\nimport Thai from './thai.json';\nexport default {\n  arabic: Arabic.words,\n  chinese: Chinese.words,\n  czech: Czech.words,\n  danish: Danish.words,\n  english: English.words,\n  esperanto: Esperanto.words,\n  finnish: Finnish.words,\n  french: French.words,\n  german: German.words,\n  hindi: Hindi.words,\n  hungarian: Hungarian.words,\n  italian: Italian.words,\n  japanese: Japanese.words,\n  korean: Korean.words,\n  norwegian: Norwegian.words,\n  persian: Persian.words,\n  polish: Polish.words,\n  portuguese: Portuguese.words,\n  russian: Russian.words,\n  turkish: Turkish.words,\n  swedish: Swedish.words,\n  thai: Thai.words,\n};\n","import dictionary from './data/dictionary';\n\ntype language =\n  | 'arabic'\n  | 'chinese'\n  | 'czech'\n  | 'danish'\n  | 'english'\n  | 'esperanto'\n  | 'finnish'\n  | 'french'\n  | 'german'\n  | 'hindi'\n  | 'hungarian'\n  | 'italian'\n  | 'japanese'\n  | 'korean'\n  | 'norwegian'\n  | 'persian'\n  | 'polish'\n  | 'portuguese'\n  | 'russian'\n  | 'turkish'\n  | 'swedish'\n  | 'thai';\nexport default class Filter {\n  private words: Set<string>;\n  /**\n   *\n   */\n  constructor(config?: { languages: language[] }) {\n    let words = dictionary.english;\n\n    if (config) {\n      const languagesChecks = new Set<language>(config?.languages);\n      if (languagesChecks.size !== 0) {\n        languagesChecks.forEach(lang => {\n          words = [...words, ...dictionary[lang]];\n        });\n      }\n    }\n    this.words = new Set<string>(words);\n  }\n\n  /**\n   *\n   * @param value\n   * @returns\n   */\n  isProfane(value: string): boolean {\n    for (const word of this.words) {\n      const wordExp = new RegExp(`${word.replace(/(\\W)/g, '\\\\$1')}`, 'gi');\n      if (wordExp.test(value)) return true;\n    }\n    return false;\n  }\n}\n"],"names":["arabic","Arabic","words","chinese","Chinese","czech","Czech","danish","Danish","english","English","esperanto","Esperanto","finnish","Finnish","french","French","german","German","hindi","Hindi","hungarian","Hungarian","italian","Italian","japanese","Japanese","korean","Korean","norwegian","Norwegian","persian","Persian","polish","Polish","portuguese","Portuguese","russian","Russian","turkish","Turkish","swedish","Swedish","thai","Thai","Filter","config","dictionary","languagesChecks","Set","languages","size","forEach","lang","isProfane","value","word","wordExp","RegExp","replace","test"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,iBAAe;EACbA,MAAM,EAAEC,MAAM,CAACC,KADF;EAEbC,OAAO,EAAEC,OAAO,CAACF,KAFJ;EAGbG,KAAK,EAAEC,KAAK,CAACJ,KAHA;EAIbK,MAAM,EAAEC,MAAM,CAACN,KAJF;EAKbO,OAAO,EAAEC,OAAO,CAACR,KALJ;EAMbS,SAAS,EAAEC,SAAS,CAACV,KANR;EAObW,OAAO,EAAEC,OAAO,CAACZ,KAPJ;EAQba,MAAM,EAAEC,MAAM,CAACd,KARF;EASbe,MAAM,EAAEC,MAAM,CAAChB,KATF;EAUbiB,KAAK,EAAEC,KAAK,CAAClB,KAVA;EAWbmB,SAAS,EAAEC,SAAS,CAACpB,KAXR;EAYbqB,OAAO,EAAEC,OAAO,CAACtB,KAZJ;EAabuB,QAAQ,EAAEC,QAAQ,CAACxB,KAbN;EAcbyB,MAAM,EAAEC,MAAM,CAAC1B,KAdF;EAeb2B,SAAS,EAAEC,SAAS,CAAC5B,KAfR;EAgBb6B,OAAO,EAAEC,OAAO,CAAC9B,KAhBJ;EAiBb+B,MAAM,EAAEC,MAAM,CAAChC,KAjBF;EAkBbiC,UAAU,EAAEC,UAAU,CAAClC,KAlBV;EAmBbmC,OAAO,EAAEC,OAAO,CAACpC,KAnBJ;EAoBbqC,OAAO,EAAEC,OAAO,CAACtC,KApBJ;EAqBbuC,OAAO,EAAEC,OAAO,CAACxC,KArBJ;EAsBbyC,IAAI,EAAEC,IAAI,CAAC1C;AAtBE,CAAf;;ICGqB2C;;;;EAKnB,gBAAYC,MAAZ;IACE,IAAI5C,KAAK,GAAG6C,UAAU,CAACtC,OAAvB;;IAEA,IAAIqC,MAAJ,EAAY;MACV,IAAME,eAAe,GAAG,IAAIC,GAAJ,CAAkBH,MAAlB,oBAAkBA,MAAM,CAAEI,SAA1B,CAAxB;;MACA,IAAIF,eAAe,CAACG,IAAhB,KAAyB,CAA7B,EAAgC;QAC9BH,eAAe,CAACI,OAAhB,CAAwB,UAAAC,IAAI;UAC1BnD,KAAK,aAAOA,KAAP,EAAiB6C,UAAU,CAACM,IAAD,CAA3B,CAAL;SADF;;;;IAKJ,KAAKnD,KAAL,GAAa,IAAI+C,GAAJ,CAAgB/C,KAAhB,CAAb;;;;;;;;;;;SAQFoD,YAAA,mBAAUC,KAAV;IACE,qDAAmB,KAAKrD,KAAxB,wCAA+B;MAAA,IAApBsD,IAAoB;MAC7B,IAAMC,OAAO,GAAG,IAAIC,MAAJ,MAAcF,IAAI,CAACG,OAAL,CAAa,OAAb,EAAsB,MAAtB,CAAd,EAA+C,IAA/C,CAAhB;MACA,IAAIF,OAAO,CAACG,IAAR,CAAaL,KAAb,CAAJ,EAAyB,OAAO,IAAP;;;IAE3B,OAAO,KAAP;;;;;;;;"}